# load packages dplyr, ggplot2, readr to read, wrangle, and plot data
library(dplyr)
library(ggplot2)
library(readr)
library(plotrix)
# read in the health care facility dataset
health_care <- read_csv(file = "data/Health_Care_Facilities.csv")
health_care %>%
filter(`Facility Type` == "Community Clinic") %>%
group_by(Services) %>%
count()
# read in the health care facility dataset
health_care <- read_csv(file = "data/Health_Care_Facilities.csv")
# read in the health care facility dataset
health_care <- read_csv(file = "data/Health_Care_Facilities.csv")
# read in the health care facility dataset
health_care <- read_csv(file = "data/raw_data/Health_Care_Facilities.csv")
health_care %>%
filter(`Facility Type` == "Community Clinic") %>%
group_by(Services) %>%
count()
health_care %>%
filter(`Facility Type` == "Community Clinic") %>%
group_by(Services) %>%
count() %>%
pie3D(slices, labels = count(), explode = 0.1,
main = "Pie Chart of Community Clinic Services")
health_care %>%
filter(`Facility Type` == "Community Clinic") %>%
group_by(Services) %>%
x <- count() %>%
pie(x, labels = Services,
main = "Pie Chart of Community Clinic Services",
col = rainbow(length(x))), legend("topright", c(Services), cex = 0.8,
fill = rainbow(length(x)))
health_care %>%
filter(`Facility Type` == "Community Clinic") %>%
group_by(Services) %>%
x <- count() %>%
pie(x, labels = Services,
main = "Pie Chart of Community Clinic Services",
col = rainbow(length(x))) legend("topright", c(Services), cex = 0.8,
fill = rainbow(length(x)))
health_care %>%
filter(`Facility Type` == "Community Clinic") %>%
group_by(Services) %>%
x <- count() %>%
pie(x, labels = Services,
main = "Pie Chart of Community Clinic Services",
col = rainbow(length(x)), legend("topright", c(Services), cex = 0.8,
fill = rainbow(length(x))))
x <- count()
health_care %>%
filter(`Facility Type` == "Community Clinic") %>%
group_by(Services) %>%
x <- count()
health_care %>%
filter(`Facility Type` == "Community Clinic") %>%
group_by(Services) %>%
count() %>%
x <- count()
# Look at the different services that community clinics provide
health_care %>%
ggplot(aes(x = `Facility Type`,
fill = Services)) +
geom_bar()
View(health_care)
install.packages("rebird")
install.packages("devtools")
devtools::install_github("ropensci/rebird")
health_care %>%
ggplot(aes(x = `Facility Type`,
fill = Services)) +
geom_bar()
health_care %>%
ggplot(aes(x = `Facility Type`,
fill = Services)) +
theme(axis.text.x = element_text(angle=45, hjust=1)) +
geom_bar()
health_care %>%
ggplot(aes(x = `Facility Type`,
fill = Services)) +
theme(axis.text.x = element_text(angle=45, hjust=1)) +
geom_bar() +
ggtitle("Types of Services per Facility Type")
health_care %>%
ggplot(aes(x = `Facility Type`,
fill = Services)) +
theme(axis.text.x = element_text(angle=45, hjust=1)) +
geom_bar() +
ggtitle("Types of Services per Facility Type")
ggsave("output/Types_of_Services_per_Facility_Type.pdf")
?legend
install.packages("graphicsQC")
health_care %>%
ggplot(aes(x = `Facility Type`,
fill = Services)) +
theme(axis.text.x = element_text(angle=45, hjust=1)) +
legend(ncol = 2) +
geom_bar() +
ggtitle("Types of Services per Facility Type")
library(graphics)
health_care %>%
ggplot(aes(x = `Facility Type`,
fill = Services)) +
theme(axis.text.x = element_text(angle=45, hjust=1)) +
legend(ncol = 2) +
geom_bar() +
ggtitle("Types of Services per Facility Type")
health_care %>%
ggplot(aes(x = `Facility Type`,
fill = Services)) +
theme(axis.text.x = element_text(angle=45, hjust=1)) +
legend(x, y = NULL, ncol = 2) +
geom_bar() +
ggtitle("Types of Services per Facility Type")
health_care %>%
ggplot(aes(x = `Facility Type`,
fill = Services)) +
theme(axis.text.x = element_text(angle=45, hjust=1)) +
legend(30, 8, ncol = 2)
health_care %>%
ggplot(aes(x = `Facility Type`,
fill = Services)) +
theme(axis.text.x = element_text(angle=45, hjust=1)) +
legend(x, y = NULL, legend, fill = NULL, col = par("col"),
border = "black", lty, angle = 45, density = NULL, bty = "o",
bg = par("bg"), box.lty = par("lty"), box.col = par("fg"),
pt.bg = NA, cex = 1, pt.cex = cex, pt.lwd = lwd, xjust = 0, yjust = 1,
x.intersp = 1, y.intersp = 1, adj = c(0, 0.5), text.width = NULL,
text.col = par("col"), text.font = NULL, trace = FALSE, plot = TRUE,
ncol = 2, horiz = FALSE, title = NULL, inset = 0, xpd,
title.col = text.col, title.adj = 0.5, title.cex = max(cex),
seg.len = 2) +
geom_bar() +
ggtitle("Types of Services per Facility Type")
health_care %>%
ggplot(aes(x = `Facility Type`,
fill = Services)) +
theme(axis.text.x = element_text(angle=45, hjust=1)) +
legend(x, y = NULL, legend, fill = NULL, col = par("col"),
border = "black", lty, angle = 45, density = NULL, bty = "o",
bg = par("bg"), box.lty = par("lty"), box.col = par("fg"),
pt.bg = NA, cex = 1, pt.cex = cex, pt.lwd = lwd, xjust = 0, yjust = 1,
x.intersp = 1, y.intersp = 1, adj = c(0, 0.5), text.width = NULL,
text.col = par("col"), text.font = NULL, trace = FALSE, plot = TRUE,
ncol = 2, horiz = FALSE, title = NULL, inset = 0, xpd,
title.col = text.col, title.adj = 0.5, seg.len = 2) +
geom_bar() +
ggtitle("Types of Services per Facility Type")
health_care %>%
ggplot(aes(x = `Facility Type`,
fill = Services)) +
theme(axis.text.x = element_text(angle=45, hjust=1)) +
legend(x = NULL, y = NULL, legend, fill = NULL, col = par("col"),
border = "black", lty, angle = 45, density = NULL, bty = "o",
bg = par("bg"), box.lty = par("lty"), box.col = par("fg"),
pt.bg = NA, cex = 1, pt.cex = cex, pt.lwd = lwd, xjust = 0, yjust = 1,
x.intersp = 1, y.intersp = 1, adj = c(0, 0.5), text.width = NULL,
text.col = par("col"), text.font = NULL, trace = FALSE, plot = TRUE,
ncol = 2, horiz = FALSE, title = NULL, inset = 0, xpd,
title.col = text.col, title.adj = 0.5, seg.len = 2) +
geom_bar() +
ggtitle("Types of Services per Facility Type")
health_care %>%
ggplot(aes(x = `Facility Type`,
fill = Services)) +
theme(axis.text.x = element_text(angle=45, hjust=1)) +
legend(x = x, y = NULL, legend, fill = NULL, col = par("col"),
border = "black", lty, angle = 45, density = NULL, bty = "o",
bg = par("bg"), box.lty = par("lty"), box.col = par("fg"),
pt.bg = NA, cex = 1, pt.cex = cex, pt.lwd = lwd, xjust = 0, yjust = 1,
x.intersp = 1, y.intersp = 1, adj = c(0, 0.5), text.width = NULL,
text.col = par("col"), text.font = NULL, trace = FALSE, plot = TRUE,
ncol = 2, horiz = FALSE, title = NULL, inset = 0, xpd,
title.col = text.col, title.adj = 0.5, seg.len = 2) +
geom_bar() +
ggtitle("Types of Services per Facility Type")
health_care %>%
ggplot(aes(x = `Facility Type`,
fill = Services)) +
theme(axis.text.x = element_text(angle=45, hjust=1)) +
legend(x = health_care, y = NULL, legend, fill = NULL, col = par("col"),
border = "black", lty, angle = 45, density = NULL, bty = "o",
bg = par("bg"), box.lty = par("lty"), box.col = par("fg"),
pt.bg = NA, cex = 1, pt.cex = cex, pt.lwd = lwd, xjust = 0, yjust = 1,
x.intersp = 1, y.intersp = 1, adj = c(0, 0.5), text.width = NULL,
text.col = par("col"), text.font = NULL, trace = FALSE, plot = TRUE,
ncol = 2, horiz = FALSE, title = NULL, inset = 0, xpd,
title.col = text.col, title.adj = 0.5, seg.len = 2) +
geom_bar() +
ggtitle("Types of Services per Facility Type")
health_care %>%
ggplot(aes(x = `Facility Type`,
fill = Services)) +
theme(axis.text.x = element_text(angle=45, hjust=1)) +
geom_bar() +
ggtitle("Types of Services per Facility Type")
health_care %>%
ggplot(aes(x = `Facility Type`,
fill = Services)) +
theme(axis.text.x = element_text(angle=45, hjust=1)) +
geom_bar() +
ggtitle("Types of Services per Facility Type")
health_care %>%
ggplot(aes(x = `Facility Type`,
fill = Services)) +
theme(axis.text.x = element_text(angle=45, hjust=1)) +
geom_bar() +
ggtitle("Types of Services per Facility Type")
ggsave("output/Types_of_Services_per_Facility_Type.pdf")
ebirdhistorical(loc = 'US-CA-415')
library(rebird)
ebirdhistorical(loc = 'US-CA-415')
(locID = 'US-CA-415')
ebirdnotable(locID = 'US-CA-415')
species_code('Larus occidentalis')
library(rebird)
species_code('Larus occidentalis')
ebirdgeo(species = species_code('Larus occidentalis'), lat = 37.7694, lng = 122.4862
ebirdgeo(species = species_code('Larus occidentalis'), lat = 38, lng = 122)
ebirdgeo(species = species_code('larus occidentalis'), lat = 38, lng = 122)
# Set API key from eBird
Sys.unsetenv(EBIRD_KEY = 'h6sktad055lj')
# Set API key from eBird
EBIRD_KEY <- h6sktad055lj
# Set API key from eBird
EBIRD_KEY <- "h6sktad055lj"
Sys.getenv()
R.home()
Sys.getenv("HOME")
ZEIT_KEY=h6sktad055lj
install.packages("rromeo")
Sys.getenv("BIRD_KEY")
Sys.getenv(EBIRD_KEY = "h6sktad055lj")
Sys.getenv((EBIRD_KEY)
dd
CONNECT_SERVER = "https://ebird.org/map/"
CONNECT_API_KEY = "h6sktad055lj"
connectServer <- Sys.getenv("CONNECT_SERVER")
EBIRD_KEY <- Sys.getenv("CONNECT_API_KEY")
curl -c cookie-jar.txt \
-H "Authorization: Key ${CONNECT_API_KEY}" \
"https://ebird.org/map"
curl -b cookie-jar.txt \
-H "Authorization: Key ${CONNECT_API_KEY}" \
"https://ebird.org/map"
Sys.getenv("EBIRD_KEY")
Sys.getenv(EBIRD_KEY = "h6sktad055lj")
Sys.getenv(EBIRD_KEY = "h6sktad055lj.")
library(rromeo)
Sys.getenv(EBIRD_KEY = "h6sktad055lj")
normalizePath("~/")
Sys.getenv()
install.packages("httr")
library(rebird)
library(httr)
ctx <- create.github.context(access_token = Sys.getenv(EBIRD_KEY))
file.edit("~/.Renviron")
ebirdgeo(species = species_code('larus occidentalis'), lat = 38, lng = 122)
EBIRD_KEY <- "h6sktad055lj"
ebirdgeo(species = species_code('larus occidentalis'), lat = 38, lng = 122)
ebirdgeo(species = species_code('larus occidentalis'), lat = 38, lng = 122)
file.edit("~/.Renviron")
